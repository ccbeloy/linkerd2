# Default values for linkerd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- control plane version. See Proxy section for proxy version
linkerdVersion: linkerdVersionValue
# -- enables the use of EndpointSlice informers for the destination service;
# enableEndpointSlices should be set to true only if EndpointSlice K8s feature
# gate is on; the feature is still experimental.
enableEndpointSlices: false
# -- enabling this omits the NET_ADMIN capability in the PSP
# and the proxy-init container when injecting the proxy;
# requires the linkerd-cni plugin to already be installed
cniEnabled: false

imagePullSecrets: []
# - name: my-private-docker-registry-login-secret

# -- Add a PSP resource and bind it to the control plane ServiceAccounts. Note
# PSP has been deprecated since k8s v1.21
enablePSP: false

# -- Omit the `sideEffects` flag in the webhook manifests
omitWebhookSideEffects: false
# -- Failure policy for the proxy injector
webhookFailurePolicy: Ignore

# heartbeat configuration
# disableHeartBeat -- Set to true to not start the heartbeat cronjob
disableHeartBeat: false

# proxy injector configuration
proxyInjector:
  # -- Do not create a secret resource for the profileValidator webhook. If this is set to `true`, the value `proxyInjector.caBundle` must be set (see below)
  externalSecret: false

  # -- Namespace selector used by admission webhook. If not set defaults to all
  # namespaces without the annotation
  # config.linkerd.io/admission-webhooks=disabled
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled

  # -- Certificate for the proxy injector. If not provided then Helm will generate one.
  crtPEM: |

  # -- Certificate key for the proxy injector. If not provided then Helm will generate one.
  keyPEM: |

  # -- Bundle of CA certificates for proxy injector. If not provided then Helm will use the certificate generated  for `proxyInjector.crtPEM`. If `proxyInjector.externalSecret` is set to true, this value must be set, as no certificate will be generated.
  caBundle: |

# service profile validator configuration
profileValidator:
  # -- Do not create a secret resource for the profileValidator webhook. If this is set to `true`, the value `profileValidator.caBundle` must be set (see below).
  externalSecret: false

  # -- Namespace selector used by admission webhook
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled

  # -- Certificate for the service profile validator. If not provided then Helm
  # will generate one.
  crtPEM: |

  # -- Certificate key for the service profile validator. If not provided then
  # Helm will generate one.
  keyPEM: |

  # -- Bundle of CA certificates for service profile validator. If not provided
  # then Helm will use the certificate generated  for `profileValidator.crtPEM`.
  # If `profileValidator.externalSecret` is set to true, this value must be set,
  # as no certificate will be generated.
  caBundle: |

# policy validator configuration
policyValidator:
  # -- Do not create a secret resource for the policyValidator webhook. If this is set to `true`, the value `policyValidator.caBundle` must be set (see below).
  externalSecret: false

  # -- Namespace selector used by admission webhook
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled

  # -- Certificate for the policy validator. If not provided then Helm
  # will generate one.
  crtPEM: |

  # -- Certificate key for the policy validator. If not provided then
  # Helm will generate one.
  keyPEM: |

  # -- Bundle of CA certificates for policy validator. If not provided
  # then Helm will use the certificate generated  for `policyValidator.crtPEM`.
  # If `policyValidator.externalSecret` is set to true, this value must be set,
  # as no certificate will be generated.
  caBundle: |
